openapi: '3.0.3'
info:
  title: API For Final Priject
  version: '1.0'
servers:
  - url: https://localhost:8000/v1
paths:
  /auth/login:
    post:
      tags:
        - 'Auth'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/req-login'

      responses:
        '200':
          description: A success full respones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/res-login-success'

        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/general-error'
  /auth/register:
    post:
      tags:
        - 'Auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/req-user'
      responses:
        '200':
          description: A success full respones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/req-user'

        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/general-error'
  /auth/whoim:
    get:
      tags:
        - 'Auth'
      responses:
        '200':
          description: A success full respones
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/req-user'

        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/general-error'

  /auth/user{id}:
    put:
      tags:
        - 'Users'

      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/req-user'

      responses:
        '200':
          description: A success full response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/req-user'

        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/general-error'

    delete:
      tags:
        - 'Users'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: A success full response
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/general-error'

components:
  schemas:
    req-login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    res-login-success:
      type: object
      properties:
        accessToken:
          type: string
    general-error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        detail:
          $ref: '#/components/schemas/detail-error'

    detail-error:
      type: object
      properties:
        type:
          type: string
        additionalProp1:
          type: string
        additionalProp2:
          type: string
    req-user:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        password:
          type: string
        address:
          type: string
        role:
          $ref: '#/components/schemas/role'
        foto:
          type: string
    role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
